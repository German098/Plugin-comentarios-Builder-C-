//---------------------------------------------------------------------------

#pragma hdrstop

#include "LineNotifier.h"
#include "Common.h"
//---------------------------------------------------------------------------
#pragma package( smart_init )

/*int __fastcall AddLineNotifier( )
{
	_di_IOTAServices IDEServices;
	if ( BorlandIDEServices->Supports( IDEServices ) ) {
		return IDEServices->AddNotifier( new TCPPOTATemplateIDENotifier( "TCPPOTATemplateIDENotifier" ) );
	}
	return -1;
}

void __fastcall RemoveLineNotifier( int iIDENotifierIndex )
{
	_di_IOTAServices IDEServices;
	if ( BorlandIDEServices->Supports( IDEServices ) ) {
		if ( iIDENotifierIndex > -1 ) {
			IDEServices->RemoveNotifier( iIDENotifierIndex );
		}
	}
}     */

__fastcall LineNotifier::LineNotifier( _di_IOTAEditLineTracker line ): id( -1 ), line( line )
{
	id = line->AddNotifier( this );
}

__fastcall LineNotifier::~LineNotifier( )
{
	if ( id > -1 ) {
		int i = 0;
		while ( i < line->GetCount( ) ) {
			line->Delete( i++ );
		}
		line->RemoveNotifier( id );
	}
}

// IOTANotifier
void __fastcall LineNotifier::AfterSave( )
{
}

void __fastcall LineNotifier::BeforeSave( )
{
}
void __fastcall LineNotifier::Destroyed( )
{
	if ( id > -1 ) {
		for ( int i = 0; i < line->GetCount( ); i++ ) {
			line->Delete( i );
		}
		line->RemoveNotifier( id );
	}
}
void __fastcall LineNotifier::Modified( )
{
}

// IOTAModuleNotifier
void __fastcall LineNotifier::LineChanged( int OldLine, int NewLine, int Data )
{
	// AQUI
	// MessageDlg( "???? " + UnicodeString( OldLine ) + " " + UnicodeString( NewLine ) + " " + UnicodeString( Data ), mtInformation, TMsgDlgButtons( ) << mbOK, 0 );
	/*if ( rangeComment.range[ 0 ] == OldLine ) {
		rangeComment.range[ 0 ] = NewLine;
	}
	if ( rangeComment.range[ 1 ] == OldLine ) {
		rangeComment.range[ 1 ] = NewLine;
	}*/
	int x = 2;
}

// IInterface
HRESULT __stdcall LineNotifier::QueryInterface( const GUID &iid, void **obj )
{
	if ( ( iid ) == __uuidof( IOTAEditLineNotifier ) ) {
		*( obj ) = static_cast<IOTAEditLineNotifier *>( this );
		static_cast<IOTAEditLineNotifier *>( *( obj ) )->AddRef( );
		return S_OK;
	}
}

ULONG __stdcall LineNotifier::AddRef( )
{
	return inherited::AddRef( );
}

ULONG __stdcall LineNotifier::Release( )
{
	return inherited::Release( );
}

